class Solution:
    def largestRectangleArea(self, n: List[int]) -> int:
        def prev_smaller(n):
            l=[]
            stack=[]
            for i in range(0,len(n)):
                while(stack!=[] and stack[len(stack)-1][0]>=n[i]):
                    stack.pop()
                if stack==[]:
                    l.append(-1)
                    # print(l)
                else:        
                    l.append(stack[len(stack)-1][-1])
                stack.append([n[i],i])
            return l    
        def next_smaller(n):
            l=[0 for i in range(len(n))]
            stack=[]
            for i in range(len(n)-1,-1,-1):
                while(stack!=[] and stack[len(stack)-1][0]>=n[i]):
                    stack.pop()
                # print(stack)
                if stack==[]:
                    l[i]=len(n)
                else:        
                    l[i]=stack[len(stack)-1][-1]
                stack.append([n[i],i])

            return l        
        prev=prev_smaller(n)
        next=next_smaller(n)
        m=0
        for i in range(len(n)):
            nse=next[i]
            pse=prev[i]
            e=n[i]*(nse-pse-1)
            m=max(m,e)
        return m  
